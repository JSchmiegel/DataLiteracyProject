{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "from matplotlib import pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_path = 'csv_data/'\n",
    "THREE_K = '_3k'\n",
    "TWENTY_K = '_20k'\n",
    "HUNDRED_K = '_100k'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "size = THREE_K"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "track_df = None"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "os.chdir('../')\n",
    "\n",
    "\n",
    "from src.get_data import get_data\n",
    "from src.get_data_tracks import get_data_tracks\n",
    "from src.save_data import save_data\n",
    "from src.convert_ms import convert_ms\n",
    "from src.data_to_csv import data_to_csv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "size = data_to_csv(track=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_path = 'data/csv_data/'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "track_df = pd.read_csv(data_path + 'track_df_' + size + '.csv').drop(columns=['Unnamed: 0'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def df_list(df, name, size):\n",
    "    try:\n",
    "        list_df = pd.read_csv(data_path + 'list_df_' + name + size + '.csv', index_col=0)\n",
    "        list_df[(name + '_uri')] = list_df[(name + '_uri')].str.strip('[]').str.split(',')\n",
    "    except:\n",
    "        list_df = df.groupby('pid')[(name + '_uri')].apply(list).reset_index(name=(name + '_uri'))\n",
    "        list_df = list_df.drop(columns=['pid'])\n",
    "    \n",
    "    return list_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "list_df_track = df_list(track_df, 'track', size)\n",
    "list_df_artist = df_list(track_df, 'artist', size)\n",
    "list_df_album = df_list(track_df, 'album', size)\n",
    "del track_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(100000, 1)\n"
     ]
    }
   ],
   "source": [
    "list_df_track.to_csv(data_path + 'list_df_track' + size + '.csv')\n",
    "list_df_artist.to_csv(data_path + 'list_df_artist' + size + '.csv')\n",
    "list_df_album.to_csv(data_path + 'list_df_album' + size + '.csv')\n",
    "print(list_df_track.shape)\n",
    "#del list_df_track, list_df_artist, list_df_album"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "def unique_vals_j(df, name, size=None):\n",
    "    try:\n",
    "        unique_vals = pd.read_csv(data_path + 'unique_' + name + '_vals_j' + size + '.csv', index_col=0)\n",
    "    except:\n",
    "        unique_vals = []\n",
    "        total_set = set()\n",
    "\n",
    "        for i, row in enumerate(df[f'{name}_uri']):\n",
    "            total_set.update(row)\n",
    "\n",
    "            unique_vals.append(len(total_set))\n",
    "\n",
    "        unique_vals = pd.DataFrame(unique_vals)\n",
    "        \n",
    "    return unique_vals"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 43.7 ms, sys: 4.89 ms, total: 48.6 ms\n",
      "Wall time: 53.3 ms\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "vals_track = unique_vals_j(list_df_track, 'track', size)\n",
    "vals_artist = unique_vals_j(list_df_artist, 'artist', size)\n",
    "vals_album = unique_vals_j(list_df_album, 'album', size)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def unique_vals(df, sub_size, name, size=None):\n",
    "    try:\n",
    "        unique_vals = pd.read_csv(data_path + 'unique_' + name + '_vals' + size + '.csv', index_col=0)\n",
    "    except:\n",
    "        unique_vals = []\n",
    "        last_elem = None\n",
    "        checkpoint_list = list(range(0,int(len(df)), sub_size))\n",
    "\n",
    "        for i in checkpoint_list:\n",
    "            sub_series = df.iloc[i:i+sub_size][(name + '_uri')]\n",
    "            if last_elem is not None:\n",
    "                sub_series = pd.concat([pd.Series([last_elem]), sub_series])\n",
    "\n",
    "            sub_cum = sub_series.cumsum()\n",
    "            last_elem = sub_cum.iloc[-1]\n",
    "            sub_sets = sub_cum.apply(set)\n",
    "            \n",
    "            if last_elem is not None:\n",
    "                unique_vals.append(sub_sets.apply(len).tolist()[1:])\n",
    "            \n",
    "        unique_vals = pd.DataFrame(np.concatenate(unique_vals))\n",
    "        \n",
    "    return unique_vals"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "%%time\n",
    "vals_track = unique_vals(list_df_track, 200, 'track', size)\n",
    "vals_artist = unique_vals(list_df_artist, 200, 'artist', size)\n",
    "vals_album = unique_vals(list_df_album, 200, 'album', size)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "#vals_track.to_csv(data_path + 'unique_track_vals' + size + '.csv')\n",
    "#vals_artist.to_csv(data_path + 'unique_artist_vals' + size + '.csv')\n",
    "#vals_album.to_csv(data_path + 'unique_album_vals' + size + '.csv')\n",
    "vals_track.to_csv(data_path + 'unique_track_vals_j' + size + '.csv')\n",
    "vals_artist.to_csv(data_path + 'unique_artist_vals_j' + size + '.csv')\n",
    "vals_album.to_csv(data_path + 'unique_album_vals_j' + size + '.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "def forward(x):\n",
    "    return x**(1/2)\n",
    "\n",
    "def inverse(x):\n",
    "    return x**2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1152x360 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(1,3, figsize=(16,5))\n",
    "\n",
    "axs[0].plot(vals_track.index, vals_track.values, color='#1DB954', linewidth=3)\n",
    "axs[1].plot(vals_artist.index, vals_artist.values, color='#1DB954', linewidth=3)\n",
    "axs[2].plot(vals_album.index, vals_album.values, color='#1DB954', linewidth=3)\n",
    "\n",
    "axs[0].set_xscale('function', functions=(forward, inverse))\n",
    "axs[0].tick_params(axis='x', rotation=45)\n",
    "axs[1].set_xscale('function', functions=(forward, inverse))\n",
    "axs[1].tick_params(axis='x', rotation=45)\n",
    "axs[2].set_xscale('function', functions=(forward, inverse))\n",
    "axs[2].tick_params(axis='x', rotation=45)\n",
    "\n",
    "axs[0].set_title('Track', size=24)\n",
    "axs[1].set_title('Artist', size=24)\n",
    "axs[2].set_title('Album', size=24)\n",
    "\n",
    "axs[0].set_ylabel('Number of\\nUnqiue Entries', size=20)\n",
    "axs[1].set_xlabel('Playlists', size=20)\n",
    "\n",
    "for ax in axs:\n",
    "    ax.tick_params(axis='x', labelsize=12)\n",
    "    ax.tick_params(axis='y', labelsize=12)\n",
    "    \n",
    "axs[0].axline([0, -14000], [len(vals_track), vals_track.values[-1][0]], alpha=0.4, color='#191414',linestyle='--')\n",
    "axs[1].axline([0, -3000], [len(vals_artist), vals_artist.values[-1][0]], alpha=0.4, color='#191414',linestyle='--')\n",
    "axs[2].axline([0, -5000], [len(vals_album), vals_album.values[-1][0]], alpha=0.4, color='#191414',linestyle='--')\n",
    "\n",
    "plt.subplots_adjust(wspace=0.28)\n",
    "plt.savefig('unique_to_playlist.pdf', bbox_inches=\"tight\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
